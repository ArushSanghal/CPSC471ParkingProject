# Generated by Django 5.0.3 on 2024-04-13 07:35

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='UniversityMember',
            fields=[
                ('ucid', models.CharField(max_length=8, primary_key=True, serialize=False, unique=True, validators=[django.core.validators.MinLengthValidator(8), django.core.validators.MaxLengthValidator(8), django.core.validators.RegexValidator(message='UCID must be exactly 8 digits.', regex='^\\d{8}$')])),
                ('name', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=100)),
                ('phone_no', models.CharField(max_length=10, validators=[django.core.validators.MinLengthValidator(10), django.core.validators.MaxLengthValidator(10), django.core.validators.RegexValidator(message='Phone number must be exactly 10 digits.', regex='^\\d{10}$')])),
                ('user', models.OneToOneField(default=None, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('plate_no', models.CharField(max_length=7, primary_key=True, serialize=False, unique=True)),
                ('make', models.CharField(max_length=20)),
                ('model', models.CharField(max_length=100)),
                ('owner', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='vehicles', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ParkingLot',
            fields=[
                ('lot_no', models.PositiveSmallIntegerField(primary_key=True, serialize=False, unique=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(36)])),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('capacity', models.PositiveSmallIntegerField()),
                ('occupied_spaces', models.PositiveSmallIntegerField()),
                ('rate_type', models.CharField(choices=[('FR', 'Flat Rate'), ('H+FR', 'Hourly + Flat Rate')], default='H+FR', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('payment_no', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('cc_holder', models.CharField(max_length=200)),
                ('cc_number', models.PositiveIntegerField(validators=[django.core.validators.MinLengthValidator(12), django.core.validators.MaxLengthValidator(19)])),
                ('cvc', models.PositiveSmallIntegerField(validators=[django.core.validators.MinLengthValidator(3), django.core.validators.MaxLengthValidator(3)])),
                ('cc_expiry_month', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)])),
                ('cc_expiry_year', models.PositiveSmallIntegerField(validators=[django.core.validators.MinLengthValidator(2), django.core.validators.MaxLengthValidator(2)])),
            ],
        ),
        migrations.CreateModel(
            name='Todo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('client_ucid', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='parking.universitymember')),
            ],
        ),
        migrations.CreateModel(
            name='ParkingAdmin',
            fields=[
                ('admin_ucid', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='parking.universitymember')),
            ],
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('plate_no', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='parking.vehicle')),
                ('vehicle_color', models.CharField(max_length=50)),
            ],
        ),
        migrations.AddField(
            model_name='vehicle',
            name='lot_no',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='parking.parkinglot'),
        ),
        migrations.CreateModel(
            name='ParkingSpace',
            fields=[
                ('space_id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('zone', models.CharField(max_length=1)),
                ('stall_no', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(99)])),
                ('lot_no', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parking.parkinglot')),
            ],
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('res_amount_due', models.PositiveSmallIntegerField()),
                ('lot_no', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parking.parkinglot')),
                ('payment_no', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parking.payment')),
                ('client_ucid', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='parking.client')),
            ],
        ),
        migrations.AddField(
            model_name='payment',
            name='client_ucid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parking.client'),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('notification_id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('title', models.CharField(max_length=50)),
                ('message', models.TextField(max_length=300)),
                ('client_ucid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parking.client')),
            ],
        ),
        migrations.AddField(
            model_name='client',
            name='plate_no',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='parking.vehicle'),
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('ticket_no', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('issue_date', models.DateField()),
                ('due_date', models.DateField()),
                ('offense', models.CharField(max_length=50)),
                ('amount_due', models.PositiveSmallIntegerField()),
                ('paid', models.BooleanField(default=False)),
                ('notification_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='parking.notification')),
                ('payment_no', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='parking.payment')),
                ('client_ucid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parking.client')),
                ('admin_ucid', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='parking.parkingadmin')),
            ],
        ),
        migrations.CreateModel(
            name='Patrols',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lot_no', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='parking.parkinglot')),
                ('admin_ucid', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='parking.parkingadmin')),
            ],
        ),
        migrations.CreateModel(
            name='ParkingPermit',
            fields=[
                ('permit_no', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('pp_issue_date', models.DateField()),
                ('pp_expiry_date', models.DateField()),
                ('pp_amount_due', models.PositiveSmallIntegerField()),
                ('payment_no', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parking.payment')),
                ('client_ucid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parking.client')),
                ('admin_ucid', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='parking.parkingadmin')),
            ],
        ),
        migrations.AddConstraint(
            model_name='reservation',
            constraint=models.UniqueConstraint(fields=('lot_no', 'client_ucid'), name='reservation_primary_keys'),
        ),
        migrations.AddConstraint(
            model_name='patrols',
            constraint=models.UniqueConstraint(fields=('lot_no', 'admin_ucid'), name='patrols_primary_keys'),
        ),
    ]
